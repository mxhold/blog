var search_data = {"index":{"searchIndex":["elorating","match","add_player()","expected_score()","k_factor()","k_factor=()","new()","rating_adjustment()","set_k_factor()","updated_ratings()","license","readme"],"longSearchIndex":["elorating","elorating::match","elorating::match#add_player()","elorating::expected_score()","elorating::k_factor()","elorating::k_factor=()","elorating::match::new()","elorating::rating_adjustment()","elorating::set_k_factor()","elorating::match#updated_ratings()","",""],"info":[["EloRating","","EloRating.html","","<p>EloRating helps you calculate Elo ratings.\n<p>See the README for an introduction.\n"],["EloRating::Match","","EloRating/Match.html","","<p>This class represents a single game between a number of players.\n"],["add_player","EloRating::Match","EloRating/Match.html#method-i-add_player","(player_attributes)","<p>Adds a player to the match\n<p>Attributes\n<p><code>rating</code>: the Elo rating of the player\n"],["expected_score","EloRating","EloRating.html#method-c-expected_score","(player_rating, opponent_rating)","<p>Calculates the expected score of a player given their rating\n(<code>player_rating</code>) and their opponent&#39;s …\n"],["k_factor","EloRating","EloRating.html#method-c-k_factor","(rating = nil)","<p>Calls the K-factor function with the provided rating.\n"],["k_factor=","EloRating","EloRating.html#method-c-k_factor-3D","(k_factor)","<p>Sets the K-factor to a number.\n"],["new","EloRating::Match","EloRating/Match.html#method-c-new","()","<p>Creates a new match\n"],["rating_adjustment","EloRating","EloRating.html#method-c-rating_adjustment","(expected_score, actual_score, rating: nil, k_factor: nil)","<p>Calculates the amount a player&#39;s rating should change.\n<p>Arguments\n<p><code>expected_score</code>: a float between 0 …\n"],["set_k_factor","EloRating","EloRating.html#method-c-set_k_factor","(&k_factor)","<p>Sets the K-factor by providing a block that optionally takes a\n<code>rating</code> argument:\n\n<pre>EloRating::set_k_factor ...</pre>\n"],["updated_ratings","EloRating::Match","EloRating/Match.html#method-i-updated_ratings","()","<p>Calculates the updated ratings for each of the players in the match.\n<p>Raises an <code>ArgumentError</code> if more than …\n"],["LICENSE","","LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2014 Maxwell Holder\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>elo_rating\n<p><code>elo_rating</code> helps you calculate Elo ratings, a rating system\nused primary for Chess.\n<p>It can handle …\n"]]}}